#!/bin/sh

set -x
set -e

exec &> /var/log/setup-machine.log

CONFIG_PATH=/etc/oscm/config
SSL_CONFIG_PATH=${CONFIG_PATH}/ssl
OSCM_CONFIG=${CONFIG_PATH}/oscm-config

source ${CONFIG_PATH}/heat-config


if [ ${CONFIG_PATH} ]; then
  until [ -f $CONFIG_PATH/finished ]
  do
    echo "scp for oscm configuration file is not finished yet sleeping 5sec."
    sleep 5
  done
  echo "scp for oscm configuration file is finished."
fi

if [ ${SSL_CONFIG_PATH} ]; then
  until [ -f $SSL_CONFIG_PATH/finished ]
  do
    echo "scp for oscm ssl certificate is not finished yet sleeping 5sec."
    sleep 5
  done
  echo "scp for oscm ssl certificate is finished."
  # TODO: add certificate to a local docker volume folder.
  # echo $SSL_CONFIG_PATH/somekey.pem > /var/web_cert
fi

WAIT_CURL="$WAIT_CURL --data-binary '{\"status\": \"SUCCESS\"}' --noproxy '*'"
eval $WAIT_CURL

source ${OSCM_CONFIG}

# For some reason the volume id is shortened to 27 characters when the device
# link in /dev/disk/by-id/ is created. Account for this by truncating the
# device name accordingly.

volume_dev_db=$(printf '%.43s\n' $DB_VOLUME_DEV)
volume_dev_app=$(printf '%.43s\n' $APP_VOLUME_DEV)

# Only format volume if it hasn't already been formatted.

if ! file -Ls $volume_dev_db | grep -q "filesystem data" ; then
    mkfs.ext4 "$volume_dev_db"
fi

if ! file -Ls $volume_dev_app | grep -q "filesystem data" ; then
    mkfs.ext4 "$volume_dev_app"
fi

mkdir -p /db
if ! grep -qs '/db' /proc/mounts; then
    mount -t ext4 $volume_dev_db /db
fi

mkdir -p /oscm
if ! grep -qs '/oscm' /proc/mounts; then
    mount -t ext4 $volume_dev_app /oscm
fi


OSCM_IMAGE=$REGISTRY/$OSCM_IMAGE_NAME
APP_IMAGE=$REGISTRY/$APP_IMAGE_NAME
DB_IMAGE=$REGISTRY/$DB_IMAGE_NAME
DB=/db/database
APP_PATH=/oscm/oscm-app/
OSCM_PATH=/oscm/oscm-core/
CLIENT_CRT_PATH=/oscm/client-crt/

DB_VOLUME=oscm-db-volume
OSCM_VOLUME=oscm-core-volume
APP_VOLUME=oscm-app-volume

mkdir -p $DB
mkdir -p $APP_PATH
mkdir -p $OSCM_PATH

OSCM_DIR=/opt/oscm
mkdir -p $OSCM_DIR

cat > /etc/motd <<EOF
This node has been set up as the mock server for oscm.
You will find
* The application config file in /oscm with a
  timestamp appended to include redeployment every time the application.yaml
  template is re-instantiated.
* A persistent application data volume mounted at /oscm
* Data directory in /db/database
* This message in /etc/motd
EOF
