[DEFAULT]
# =========== items for agent scheduler extension =============
# loadbalancer_pool_scheduler_driver = neutron.services.loadbalancer.agent_scheduler.ChanceScheduler
# loadbalancer_pool_scheduler_driver = neutron.services.loadbalancer.agent_scheduler.LeastPoolAgentScheduler
# loadbalancer_scheduler_driver = neutron.agent_scheduler.ChanceScheduler

# LBaas requires an interface driver be set. Choose the one that best
# matches your plugin.
# interface_driver =
interface_driver = <%= @interface_driver %>

[quotas]
# Number of vips allowed per tenant. A negative value means unlimited.  This
# is only applicable when v1 of the lbaas extension is used.
# quota_vip = 10

# Number of pools allowed per tenant. A negative value means unlimited.  This
# is applicable in both the v1 and v2 lbaas extensions.
# quota_pool = 10

# Number of pool members allowed per tenant. A negative value means unlimited.
# The default is unlimited because a member is not a real resource consumer
# on Openstack. However, on back-end, a member is a resource consumer
# and that is the reason why quota is possible.  This is applicable in both
# the v1 and v2 lbaas extensions.
# quota_member = -1

# Number of health monitors allowed per tenant. A negative value means
# unlimited.
# The default is unlimited because a health monitor is not a real resource
# consumer on Openstack. However, on back-end, a health monitor is a resource
# consumer and that is the reason why quota is possible.  This is only
# applicable when using the v1 lbaas extension.  The quota for the v2 lbaas
# extension health monitor is quota_healthmonitor.
# quota_health_monitor = -1

# Number of loadbalancers allowed per tenant. A negative value means unlimited.
# This is only applicable in the v2 lbaas extension.
# quota_loadbalancer = 10

# Number of listeners allowed per tenant. A negative value means unlimited.
# This is only applicable in the v2 lbaas extension.
# quota_listener = -1

# Number of v2 health monitors allowed per tenant. A negative value means
# unlimited. This is only applicable in the v2 lbaas extension.  The quota for
# the v1 lbaas extension health monitor is configured with
# quota_health_monitor.
# quota_healthmonitor = -1

[service_auth]
# auth_url = http://127.0.0.1:5000/v2.0
auth_url = <%= KeystoneHelper.versioned_service_URL(@keystone_settings["protocol"],
                                                    @keystone_settings["internal_url_host"],
                                                    @keystone_settings["service_port"],
                                                    "2.0") %>
# admin_tenant_name = %SERVICE_TENANT_NAME%
admin_tenant_name = <%= @keystone_settings['service_tenant'] %>
# admin_user = %SERVICE_USER%
admin_user = <%= @keystone_settings['service_user'] %>
# admin_password = %SERVICE_PASSWORD%
admin_password = <%= @keystone_settings['service_password'] %>
# admin_user_domain = %SERVICE_USER_DOMAIN%
# admin_project_domain = %SERVICE_PROJECT_DOMAIN%
# region = %REGION%
region_name = <%= @keystone_settings['endpoint_region'] %>
# service_name = lbaas
# auth_version = 2

[service_providers]
# Must be in form:
# service_provider=<service_type>:<name>:<driver>[:default]
# List of allowed service types includes LOADBALANCER
# Combination of <service type> and <name> must be unique; <driver> must also be unique
# This is multiline option
# service_provider=LOADBALANCER:name:lbaas_plugin_driver_path:default
# service_provider = LOADBALANCER:radware:neutron_lbaas.services.loadbalancer.drivers.radware.driver.LoadBalancerDriver:default
# service_provider = LOADBALANCERV2:radwarev2:neutron_lbaas.drivers.radware.v2_driver.RadwareLBaaSV2Driver:default
# service_provider=LOADBALANCER:NetScaler:neutron_lbaas.services.loadbalancer.drivers.netscaler.netscaler_driver.NetScalerPluginDriver
# service_provider=LOADBALANCER:Embrane:neutron_lbaas.services.loadbalancer.drivers.embrane.driver.EmbraneLbaas:default
# service_provider = LOADBALANCER:A10Networks:neutron_lbaas.services.loadbalancer.drivers.a10networks.driver_v1.ThunderDriver:default
# service_provider = LOADBALANCER:VMWareEdge:neutron_lbaas.services.loadbalancer.drivers.vmware.edge_driver.EdgeLoadbalancerDriver:default

# LBaaS v2 drivers
# service_provider = LOADBALANCERV2:Octavia:neutron_lbaas.drivers.octavia.driver.OctaviaDriver:default
# service_provider = LOADBALANCERV2:LoggingNoop:neutron_lbaas.drivers.logging_noop.driver.LoggingNoopLoadBalancerDriver:default
# service_provider=LOADBALANCERV2:Haproxy:neutron_lbaas.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default
# service_provider = LOADBALANCERV2:A10Networks:neutron_lbaas.drivers.a10networks.driver_v2.ThunderDriver:default
# service_provider = LOADBALANCERV2:brocade:neutron_lbaas.drivers.brocade.driver_v2.BrocadeLoadBalancerDriver:default
# service_provider = LOADBALANCERV2:kemptechnologies:neutron_lbaas.drivers.kemptechnologies.driver_v2.KempLoadMasterDriver:default
<% if @use_lbaasv2 -%>
<%
  service_provider = case @lbaasv2_driver
    when "f5"
      "LOADBALANCERV2:F5Networks:neutron_lbaas.drivers.f5.driver_v2.F5LBaaSV2Driver:default"
    when nil, "", "haproxy"
      "LOADBALANCERV2:Haproxy:neutron_lbaas.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default"
  end
%>
<% elsif @use_lbaas -%>
  service_provider = "LOADBALANCER:Haproxy:neutron_lbaas.services.loadbalancer.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default"
<% end -%>
<% if @networking_plugin.eql?("midonet") -%>
  service_provider = "LOADBALANCER:Midonet:midonet.neutron.services.loadbalancer.driver.MidonetLoadbalancerDriver:default"
<% end -%>
service_provider=<%= service_provider %>

[certificates]
# cert_manager_type = barbican
## The following option is only valid when using neutron_lbaas.common.cert_manager.local_cert_manager
# storage_path = /var/lib/neutron-lbaas/certificates/
