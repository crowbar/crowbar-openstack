#
# Copyright 2015, SUSE LINUX GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

en:
  nav:
    manila: Manila

  barclamp:
    manila:
      edit_attributes:
        rabbitmq_instance: 'RabbitMQ'
        database_instance: 'Database Instance'
        keystone_instance: 'Keystone'
        glance_instance: 'Glance'
        shares:
          addheader: 'Add new Manila Backend'
          listheader: 'Share backends'
          backend_name: 'Name for Backend'
          backend_driver: 'Type of Share'
          loading_text: 'Loading Backends...'
          generic_parameters: 'Generic backend parameters'
          netapp_parameters: "NetApp parameters"
          netapp_managed_parameters: "NetApp parameters (managed mode)"
          hitachi_parameters: "Hitachi parameters"
          manual_parameters: 'Other driver parameters'
          generic_share_driver: 'Generic driver'
          netapp_share_driver: 'NetApp driver'
          netapp_managed_share_driver: 'NetApp driver (managed)'
          hitachi_share_driver: 'Hitachi driver'
          manual_share_driver: 'Other driver'
          generic:
            not_supported: 'The generic driver can be used for testing but is not supported.'
          manual:
            config_hint: 'Each line will be added to manila.conf. If the driver needs an external file, this file must be manually uploaded.'
            driver_hint: 'For instance, manila.share.drivers.generic.GenericShareDriver'
            not_supported: 'Manually picking a driver can be used to specify a Manila driver not available in the list of drivers above. This is however not supported.'
          index:
            generic:
              service_instance_user: 'Service instance user'
              service_instance_password: 'Service instance password'
              path_to_private_key: 'Path to private key'
              service_instance_name_or_id: 'Name or UUID of the service instance VM'
              service_net_name_or_ip: 'Service network name or IP'
              tenant_net_name_or_ip: 'Tenant network name or IP'
            netapp:
              netapp_vserver: 'Name of the Virtual Storage Server (vserver)'
              netapp_login: 'Username for accessing NetApp'
              netapp_password: 'Password for accessing NetApp'
              netapp_server_hostname: 'Server host name'
              netapp_server_port: 'Server port'
              netapp_transport_type: 'Transport Type'
              netapp_root_volume_aggregate: 'Root volume aggregate'
              netapp_aggregate_name_search_pattern: 'Aggregate name search pattern'
              netapp_port_name_search_pattern: 'Port name search pattern'
            hitachi:
              hds_hnas_cluster_admin_ip0: 'The IP of the clusters admin node. Only set in HNAS multinode clusters.'
              hds_hnas_evs_id: 'Specify which EVS this backend is assigned to.'
              hds_hnas_evs_ip: 'Specify IP for mounting shares.'
              hds_hnas_file_system_name: 'Specify file-system name for creating shares.'
              hds_hnas_ip: 'HNAS management interface IP for communication between Manila controller and HNAS.'
              hds_hnas_password: 'HNAS user password. Required only if private key is not provided.'
              hds_hnas_ssh_private_key: 'RSA/DSA private key value used to connect into HNAS. Required only if password is not provided.'
              hds_hnas_stalled_job_timeout: 'The time (in seconds) to wait for stalled HNAS jobs before aborting.'
              hds_hnas_user: 'HNAS username Base64 String in order to perform tasks such as create file-systems and network interfaces.'
            manual:
              config: 'Options'
              driver: 'Driver'
        ssl_header: 'SSL Support'
        ssl:
          generate_certs: 'Generate (self-signed) certificates (implies insecure)'
          certfile: 'SSL Certificate File'
          keyfile: 'SSL (Private) Key File'
          insecure: 'SSL Certificate is insecure (for instance, self-signed)'
          cert_required: 'Require Client Certificate'
          ca_certs: 'SSL CA Certificates File'
        api:
          protocol: 'Protocol'
      validation:
        generic:
          service_instance_user: 'Service instance user can not be empty'
          service_instance_name_or_id: 'Service instance Name/ID can not be empty'
          service_net_name_or_ip: 'Service network name/IP can not be empty'
          tenant_net_name_or_ip: 'Tenant network name/IP can not be empty'
          password_or_private_key: 'Password or private key path must be given'
