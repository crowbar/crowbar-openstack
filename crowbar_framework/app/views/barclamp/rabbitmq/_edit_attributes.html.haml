= attributes_for @proposal do
  .panel-sub
    = header show_raw_deployment?, true

  .panel-body
    = string_field :vhost
    = integer_field :port
    = string_field :user

    %fieldset
      %legend
        = t(".ssl_header")

      = boolean_field %w(ssl enabled),
        "data-sslprefix" => "ssl",
        "data-sslcert" => "/etc/rabbitmq/ssl/certs/signing_cert.pem",
        "data-sslkey" => "/etc/rabbitmq/ssl/private/signing_key.pem"

      #ssl_container
        = integer_field %w(ssl port)
        = boolean_field %w(ssl generate_certs)
        = string_field %w(ssl certfile)
        = string_field %w(ssl keyfile)
        = boolean_field %w(ssl cert_required),
          "data-enabler" => "true",
          "data-enabler-target" => "#ssl_ca_certs"
        = string_field %w(ssl ca_certs)
        = boolean_field %w(ssl insecure),
          "data-disabler" => "true",
          "data-disabler-target" => "#ssl_client_ca_certs"
        = string_field %w(ssl client_ca_certs)

    %fieldset#ha-setup{ "data-show-for-clusters-only" => "true", "data-elements-path" => "rabbitmq-server" }
      %legend
        = t('.ha_header')

      = boolean_field %w(cluster), "data-hideit" => "true", "data-hideit-target" => "#ha_storage_container", "data-hideit-direct" => "true"

      #ha_storage_container
        = select_field %w(ha storage mode), :collection => :ha_storage_mode_for_rabbitmq, "data-showit" => ["drbd", "shared"].join(";"), "data-showit-target" => "#drbd_storage_container;#shared_storage_container", "data-showit-direct" => "true"

        #drbd_storage_container
          .alert.alert-info
            = t('.ha.storage.drbd_info')
          = integer_field %w(ha storage drbd size)

        #shared_storage_container
          = string_field %w(ha storage shared device)
          = string_field %w(ha storage shared fstype)
          = string_field %w(ha storage shared options)
