= attributes_for @proposal do
  .panel-sub
    = header show_raw_deployment?, true

  .panel-body

    %fieldset
      %legend
        = t(".agent_header")

      = select_field %w(agent log_level), :collection => :agent_log_levels
      = integer_field %w(agent statsd_port)
      = boolean_field %w(agent monitor_ceph)
      = boolean_field %w(agent monitor_libvirt)
      = boolean_field %w(agent monitor_ovs)
      = integer_field %w(agent check_frequency)
      = integer_field %w(agent num_collector_threads)
      = integer_field %w(agent pool_full_max_retries)
      = integer_field %w(agent plugin_collect_time_warn)
      = integer_field %w(agent max_measurement_buffer_size)
      = integer_field %w(agent backlog_send_rate)
      = integer_field %w(agent amplifier)

    %fieldset
      %legend
        = t(".api_header")

      = select_field %w(api log_level), :collection => :api_log_levels

    %fieldset
      %legend
        = t(".log_api_header")

      = select_field %w(log_api log_level), :collection => :api_log_levels

    %fieldset
      %legend
        = t(".ssl_header")

      = select_field %w(api protocol),
        :collection => :api_protocols_for_monasca,
        "data-sslprefix" => "ssl",
        "data-sslcert" => "/etc/monasca/ssl/certs/signing_cert.pem",
        "data-sslkey" => "/etc/monasca/ssl/private/signing_key.pem"

      #ssl-container
        = boolean_field %w(ssl generate_certs)
        = string_field %w(ssl certfile)
        = string_field %w(ssl keyfile)
        = boolean_field %w(ssl insecure)
        = boolean_field %w(ssl cert_required),
          "data-enabler" => "true",
          "data-enabler-target" => "#ssl_ca_certs"
        = string_field %w(ssl ca_certs)

    %fieldset
      %legend
        = t(".master_notification_header")

      = boolean_field %w(notification email_enabled)
      = string_field %w(notification email_smtp_host)
      = integer_field %w(notification email_smtp_port)
      = string_field %w(notification email_smtp_user)
      = password_field %w(notification email_smtp_password)
      = string_field %w(notification email_smtp_from_address)

    %fieldset
      %legend
        = t(".db_header")

      = select_field %w(tsdb), :collection => :tsdbs
